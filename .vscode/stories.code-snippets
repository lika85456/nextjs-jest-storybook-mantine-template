{
	// Place your mematron2 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Storybook Story": {
        "prefix": "story",
        "scope": "typescriptreact",
        "body": [
            "import React from 'react';",
            "import { Meta, Story } from '@storybook/react';",
            "import ${TM_FILENAME_BASE/^(.+)(\\.stories)$/$1/}, { Props } from './${TM_FILENAME_BASE/^(.+)(\\.stories)$/$1/}';",
            "",
            "export default {",
            "    title: '$1/${TM_FILENAME_BASE/^(.+)(\\.stories)$/$1/}',",
            "    component: ${TM_FILENAME_BASE/^(.+)(\\.stories)$/$1/}",
            "} as Meta;",
            "",
            "const Template: Story<Props> = (args) => <${TM_FILENAME_BASE/^(.+)(\\.stories)$/$1/} {...args} />;",
            "",
            "export const Primary = Template.bind({});",
            "Primary.args = {};",
            "",
            "export const Loading = Template.bind({});",
            "Loading.args = {",
            "    isLoading: true",
            "};",
            "",
            "export const Error = Template.bind({});",
            "Error.args = {",
            "    error: 'error message'",
            "};"
        ]
    }
}